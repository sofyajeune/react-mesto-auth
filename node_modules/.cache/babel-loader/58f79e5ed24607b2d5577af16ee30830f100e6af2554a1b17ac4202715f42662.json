{"ast":null,"code":"var _jsxFileName = \"/Users/sofya/dev/mesto-react/src/components/EditProfilePopup.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditProfilePopup(props) {\n  _s();\n  const {\n    isOpen,\n    onClose,\n    onUpdateUser\n  } = props;\n  //Подписываемся на контекст\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  // После загрузки текущего пользователя из API\n  // его данные будут использованы в управляемых компонентах.\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  //Функция для изменения имени\n  function handleUserNameChange(event) {\n    setName(event.target.value);\n  }\n\n  //Функция для изменения описания\n  function handleUserDescriptionChange(event) {\n    setDescription(event.target.value);\n  }\n\n  //Обработчик сабмита формы\n  function handleSubmit(event) {\n    event.preventDefault();\n    //Передача значений управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"edit-form\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    isOpen: isOpen,\n    onClose: onClose,\n    buttonName: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      className: \"popup__input popup__input_data_name\",\n      id: \"data_name\",\n      minLength: 2,\n      maxLength: 40,\n      placeholder: \"\\u0418\\u043C\\u044F\",\n      required: true,\n      onChange: handleUserNameChange,\n      value: name || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-input-error\",\n      id: \"data_name-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"about\",\n      className: \"popup__input popup__input_data_job\",\n      id: \"data_job\",\n      minLength: 2,\n      maxLength: 200,\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      required: true,\n      onChange: handleUserDescriptionChange,\n      value: description || \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-input-error\",\n      id: \"data_job-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n_c = EditProfilePopup;\nexport default EditProfilePopup;\nvar _c;\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","props","isOpen","onClose","onUpdateUser","currentUser","useContext","name","setName","useState","description","setDescription","useEffect","about","handleUserNameChange","event","target","value","handleUserDescriptionChange","handleSubmit","preventDefault"],"sources":["/Users/sofya/dev/mesto-react/src/components/EditProfilePopup.js"],"sourcesContent":["import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditProfilePopup(props) {\n\n    const { isOpen, onClose, onUpdateUser } = props\n    //Подписываемся на контекст\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n  // После загрузки текущего пользователя из API\n// его данные будут использованы в управляемых компонентах.\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser])\n\n    //Функция для изменения имени\n    function handleUserNameChange(event) {\n        setName(event.target.value)\n    }\n\n    //Функция для изменения описания\n    function handleUserDescriptionChange(event) {\n        setDescription(event.target.value)\n    }\n\n    //Обработчик сабмита формы\n    function handleSubmit(event) {\n        event.preventDefault();\n        //Передача значений управляемых компонентов во внешний обработчик\n        onUpdateUser({\n            name: name,\n            about: description\n        });\n    }\n\n    return (\n\n        <PopupWithForm\n            name=\"edit-form\"\n            title=\"Редактировать профиль\"\n            isOpen={isOpen}\n            onClose={onClose}\n            buttonName='Сохранить'\n            onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"name\" className=\"popup__input popup__input_data_name\" id=\"data_name\" minLength={2} maxLength={40} placeholder=\"Имя\" required onChange={handleUserNameChange} value={name || \"\"} />\n            <span className=\"popup__form-input-error\" id=\"data_name-error\" />\n            <input type=\"text\" name=\"about\" className=\"popup__input popup__input_data_job\" id=\"data_job\" minLength={2} maxLength={200} placeholder=\"О себе\" required onChange={handleUserDescriptionChange} value={description || \"\"} />\n            <span className=\"popup__form-input-error\" id=\"data_job-error\" />\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,kBAAkB,QAAQ,gCAAgC;AAAC;AAEpE,SAASC,gBAAgB,CAACC,KAAK,EAAE;EAAA;EAE7B,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGH,KAAK;EAC/C;EACA,MAAMI,WAAW,GAAGR,KAAK,CAACS,UAAU,CAACP,kBAAkB,CAAC;EAExD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACF;EACIZ,KAAK,CAACe,SAAS,CAAC,MAAM;IAClBJ,OAAO,CAACH,WAAW,CAACE,IAAI,CAAC;IACzBI,cAAc,CAACN,WAAW,CAACQ,KAAK,CAAC;EACrC,CAAC,EAAE,CAACR,WAAW,CAAC,CAAC;;EAEjB;EACA,SAASS,oBAAoB,CAACC,KAAK,EAAE;IACjCP,OAAO,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B;;EAEA;EACA,SAASC,2BAA2B,CAACH,KAAK,EAAE;IACxCJ,cAAc,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC;;EAEA;EACA,SAASE,YAAY,CAACJ,KAAK,EAAE;IACzBA,KAAK,CAACK,cAAc,EAAE;IACtB;IACAhB,YAAY,CAAC;MACTG,IAAI,EAAEA,IAAI;MACVM,KAAK,EAAEH;IACX,CAAC,CAAC;EACN;EAEA,oBAEI,QAAC,aAAa;IACV,IAAI,EAAC,WAAW;IAChB,KAAK,EAAC,2HAAuB;IAC7B,MAAM,EAAER,MAAO;IACf,OAAO,EAAEC,OAAQ;IACjB,UAAU,EAAC,wDAAW;IACtB,QAAQ,EAAEgB,YAAa;IAAA,wBACvB;MAAO,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAC,qCAAqC;MAAC,EAAE,EAAC,WAAW;MAAC,SAAS,EAAE,CAAE;MAAC,SAAS,EAAE,EAAG;MAAC,WAAW,EAAC,oBAAK;MAAC,QAAQ;MAAC,QAAQ,EAAEL,oBAAqB;MAAC,KAAK,EAAEP,IAAI,IAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3M;MAAM,SAAS,EAAC,yBAAyB;MAAC,EAAE,EAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAG,eACjE;MAAO,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,OAAO;MAAC,SAAS,EAAC,oCAAoC;MAAC,EAAE,EAAC,UAAU;MAAC,SAAS,EAAE,CAAE;MAAC,SAAS,EAAE,GAAI;MAAC,WAAW,EAAC,iCAAQ;MAAC,QAAQ;MAAC,QAAQ,EAAEW,2BAA4B;MAAC,KAAK,EAAER,WAAW,IAAI;IAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eAC5N;MAAM,SAAS,EAAC,yBAAyB;MAAC,EAAE,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpD;AAExB;AAAC,GAnDQV,gBAAgB;AAAA,KAAhBA,gBAAgB;AAqDzB,eAAeA,gBAAgB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}