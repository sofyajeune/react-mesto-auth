{"ast":null,"code":"var _jsxFileName = \"/Users/sofya/dev/mesto-react/src/components/AddPlacePopup.js\";\nimport React, { useState, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport useForm from \"../hooks/useForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPlacePopup(props) {\n  const {\n    isOpen,\n    onClose,\n    onAddPlace\n  } = props;\n\n  //Стейты для имени и ссылки на картинку\n  // const [cardTitle, setCardTitle] = useState('');\n  // const [cardLink, setCardLink] = useState('');\n\n  // //Обработчик установки названия места\n  // function handleCardTitle(event) {\n  //     useForm()\n  // }\n\n  // //Обработчик для ссылки для карт\n  // function handleCardLink(event) {\n  //     useForm()\n  // }\n\n  // //Обработчик сабмита формы добавления карточки\n  // function handleSubmit(event) {\n  //     event.preventDefault();\n\n  //     onAddPlace({\n  //         name: cardTitle,\n  //         link: cardLink\n  //     })\n  // }\n\n  // React.useEffect(() => {\n  //     useForm()\n  // }, [isOpen])\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"add-card\",\n    title: \"\\u041D\\u043E\\u0432\\u043E\\u0435 \\u043C\\u0435\\u0441\\u0442\\u043E\",\n    isOpen: isOpen,\n    onClose: onClose,\n    buttonName: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      className: \"popup__input popup__input_data_photo\",\n      id: \"data_photo\",\n      placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      minLength: 2,\n      maxLength: 30,\n      required: true,\n      onChange: useForm,\n      value: cardTitle ? cardTitle : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-input-error\",\n      id: \"data_photo-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"url\",\n      name: \"link\",\n      className: \"popup__input popup__input_data_url\",\n      id: \"data_url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n      required: true,\n      onChange: useForm,\n      value: cardLink ? cardLink : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__form-input-error\",\n      id: \"data_url-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_c = AddPlacePopup;\nexport default AddPlacePopup;\nvar _c;\n$RefreshReg$(_c, \"AddPlacePopup\");","map":{"version":3,"names":["React","useState","useEffect","PopupWithForm","useForm","AddPlacePopup","props","isOpen","onClose","onAddPlace","handleSubmit","cardTitle","cardLink"],"sources":["/Users/sofya/dev/mesto-react/src/components/AddPlacePopup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport useForm from \"../hooks/useForm\";\n\nfunction AddPlacePopup(props) {\n\n    const { isOpen, onClose, onAddPlace } = props \n    \n    //Стейты для имени и ссылки на картинку\n    // const [cardTitle, setCardTitle] = useState('');\n    // const [cardLink, setCardLink] = useState('');\n\n    // //Обработчик установки названия места\n    // function handleCardTitle(event) {\n    //     useForm()\n    // }\n\n    // //Обработчик для ссылки для карт\n    // function handleCardLink(event) {\n    //     useForm()\n    // }\n\n    // //Обработчик сабмита формы добавления карточки\n    // function handleSubmit(event) {\n    //     event.preventDefault();\n\n    //     onAddPlace({\n    //         name: cardTitle,\n    //         link: cardLink\n    //     })\n    // }\n\n    // React.useEffect(() => {\n    //     useForm()\n    // }, [isOpen])\n\n    return (\n        <PopupWithForm\n            name=\"add-card\"\n            title=\"Новое место\"\n            isOpen={isOpen}\n            onClose={onClose}\n            buttonName=\"Создать\"\n            onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"name\" className=\"popup__input popup__input_data_photo\" id=\"data_photo\" placeholder=\"Название\" minLength={2} maxLength={30} required onChange={useForm}\n        value={cardTitle ? cardTitle : ''}/>\n            <span className=\"popup__form-input-error\" id=\"data_photo-error\" />\n            <input type=\"url\" name=\"link\" className=\"popup__input popup__input_data_url\" id=\"data_url\" placeholder=\"Ссылка на картинку\" required onChange={useForm}\n        value={cardLink ? cardLink : ''}/>\n            <span className=\"popup__form-input-error\" id=\"data_url-error\" />\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,OAAO,MAAM,kBAAkB;AAAC;AAEvC,SAASC,aAAa,CAACC,KAAK,EAAE;EAE1B,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC;EAAW,CAAC,GAAGH,KAAK;;EAE7C;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACI,QAAC,aAAa;IACV,IAAI,EAAC,UAAU;IACf,KAAK,EAAC,+DAAa;IACnB,MAAM,EAAEC,MAAO;IACf,OAAO,EAAEC,OAAQ;IACjB,UAAU,EAAC,4CAAS;IACpB,QAAQ,EAAEE,YAAa;IAAA,wBACvB;MAAO,IAAI,EAAC,MAAM;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAC,sCAAsC;MAAC,EAAE,EAAC,YAAY;MAAC,WAAW,EAAC,kDAAU;MAAC,SAAS,EAAE,CAAE;MAAC,SAAS,EAAE,EAAG;MAAC,QAAQ;MAAC,QAAQ,EAAEN,OAAQ;MACnL,KAAK,EAAEO,SAAS,GAAGA,SAAS,GAAG;IAAG;MAAA;MAAA;MAAA;IAAA,QAAE,eAChC;MAAM,SAAS,EAAC,yBAAyB;MAAC,EAAE,EAAC;IAAkB;MAAA;MAAA;MAAA;IAAA,QAAG,eAClE;MAAO,IAAI,EAAC,KAAK;MAAC,IAAI,EAAC,MAAM;MAAC,SAAS,EAAC,oCAAoC;MAAC,EAAE,EAAC,UAAU;MAAC,WAAW,EAAC,oGAAoB;MAAC,QAAQ;MAAC,QAAQ,EAAEP,OAAQ;MAC3J,KAAK,EAAEQ,QAAQ,GAAGA,QAAQ,GAAG;IAAG;MAAA;MAAA;MAAA;IAAA,QAAE,eAC9B;MAAM,SAAS,EAAC,yBAAyB;MAAC,EAAE,EAAC;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QACpD;AAExB;AAAC,KAhDQP,aAAa;AAkDtB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}