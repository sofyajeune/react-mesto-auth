{"ast":null,"code":"var _jsxFileName = \"/Users/sofya/dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport '../index.css';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = React.useState({});\n\n  //Получаем c сервера данные пользователя и карточки с сервера\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCard()]).then(_ref => {\n      let [res, cards] = _ref;\n      setCurrentUser(res);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  //Состояние попапов \n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  //Для выбранной карточки (попап открытой картинки)\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  //Обработчик клика по изображению (попап)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(name, about) {\n    api.setUserInfo(name, about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.addNewAvatar(user.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n  }\n\n  //Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  //Обработчик закрытия поп-апов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  //Стейт для карточек\n  const [cards, setCards] = React.useState([]);\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        isEditAvatarPopupOpen: handleEditAvatarClick,\n        isEditProfilePopupOpen: handleEditProfileClick,\n        isAddPlacePopupOpen: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onClose: closeAllPopups,\n        name: \"confirm-delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonName: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+ihCgbd3JyuzrFLkelbmC3+cWa4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","api","Footer","Header","Main","PopupWithForm","ImagePopup","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","useState","useEffect","Promise","all","getUserInfo","getInitialCard","then","res","cards","setCards","catch","err","console","log","isEditAvatarPopupOpen","setIsAvatarPopupOpen","isEditProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","handleCardClick","props","handleUpdateUser","name","about","setUserInfo","closeAllPopups","handleUpdateAvatar","user","addNewAvatar","avatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","removeCard","filter","item","handleAddPlace","addNewCard","link"],"sources":["/Users/sofya/dev/mesto-react/src/components/App.js"],"sourcesContent":["\nimport '../index.css';\nimport React from 'react';\nimport { api } from '../utils/Api';\n\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\n\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = React.useState({})\n\n\n  //Получаем c сервера данные пользователя и карточки с сервера\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCard()\n    ])\n      .then(([res, cards]) => {\n        setCurrentUser(res)\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //Состояние попапов \n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  //Для выбранной карточки (попап открытой картинки)\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  //Обработчик клика по изображению (попап)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(name, about) {\n    api.setUserInfo(name, about)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.addNewAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n//Обработчик кнопки редактирования аватарки\nfunction handleEditAvatarClick() {\n  setIsAvatarPopupOpen(true);\n}\n\n//Обработчик кнопки редактирования инф-ии профиля\nfunction handleEditProfileClick() {\n  setIsProfilePopupOpen(true);\n}\n\n//Обработчик кнопки добавления карточки\nfunction handleAddPlaceClick() {\n  setIsAddPlacePopupOpen(true);\n}\n\n //Обработчик закрытия поп-апов\n function closeAllPopups() {\n  setIsAddPlacePopupOpen(false);\n  setIsAvatarPopupOpen(false);\n  setIsProfilePopupOpen(false);\n  setSelectedCard(null);\n}\n\n //Стейт для карточек\n const [cards, setCards] = React.useState([]);\n\nfunction handleCardLike(card) {\n  // Снова проверяем, есть ли уже лайк на этой карточке\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n  \n  // Отправляем запрос в API и получаем обновлённые данные карточки\n  api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n  });\n} \n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          isEditAvatarPopupOpen={handleEditAvatarClick}\n          isEditProfilePopupOpen={handleEditProfileClick}\n          isAddPlacePopupOpen={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete}\n          />\n        <Footer />\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}