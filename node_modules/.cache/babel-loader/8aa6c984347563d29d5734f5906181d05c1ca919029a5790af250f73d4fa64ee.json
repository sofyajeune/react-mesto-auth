{"ast":null,"code":"const checkResponse = res => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n};\nconst BaseUrl = 'https://auth.nomoreparties.co';\nconst signUp = (email, password) => {\n  return fetch(`${BaseUrl}/sign-up`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    return checkResponse(res);\n  });\n};\nconst signIn = (email, password) => {\n  const requestUrl = BaseUrl + '/sign-in';\n  return fetch(requestUrl, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(checkResponse);\n};\nconst checkToken = token => {\n  const requestUrl = BaseUrl + '/users/me';\n  return fetch(requestUrl, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    }\n  }).then(checkResponse);\n};\nexport { signUp, signIn, checkToken };","map":{"version":3,"names":["checkResponse","res","ok","json","Promise","reject","status","BaseUrl","signUp","email","password","fetch","method","headers","body","JSON","stringify","then","signIn","requestUrl","checkToken","token"],"sources":["/Users/sofya/dev/react-mesto-auth-1/src/utils/apiAuth.js"],"sourcesContent":["const checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(res.status);\n}\n\nconst BaseUrl = 'https://auth.nomoreparties.co';\n\nconst signUp = (email, password) => {\n  return fetch(`${BaseUrl}/sign-up`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({password, email})\n  })\n  .then((res) => {\n    return checkResponse(res)\n  })\n}\n\nconst signIn = (email, password) => {\n  const requestUrl = BaseUrl + '/sign-in';\n  return fetch(requestUrl, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n    body: JSON.stringify({ email, password }),\n  }).then(checkResponse);\n}\n\nconst checkToken = (token) => {\n  const requestUrl = BaseUrl + '/users/me';\n  return fetch(requestUrl, {\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${token}`\n    },\n  }).then(checkResponse);\n}\n\nexport { signUp, signIn, checkToken };"],"mappings":"AAAA,MAAMA,aAAa,GAAIC,GAAG,IAAK;EAC7B,IAAIA,GAAG,CAACC,EAAE,EAAE;IACV,OAAOD,GAAG,CAACE,IAAI,EAAE;EACnB;EACA,OAAOC,OAAO,CAACC,MAAM,CAACJ,GAAG,CAACK,MAAM,CAAC;AACnC,CAAC;AAED,MAAMC,OAAO,GAAG,+BAA+B;AAE/C,MAAMC,MAAM,GAAG,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAClC,OAAOC,KAAK,CAAE,GAAEJ,OAAQ,UAAS,EAAE;IACjCK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC5B,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACN,QAAQ;MAAED;IAAK,CAAC;EACxC,CAAC,CAAC,CACDQ,IAAI,CAAEhB,GAAG,IAAK;IACb,OAAOD,aAAa,CAACC,GAAG,CAAC;EAC3B,CAAC,CAAC;AACJ,CAAC;AAED,MAAMiB,MAAM,GAAG,CAACT,KAAK,EAAEC,QAAQ,KAAK;EAClC,MAAMS,UAAU,GAAGZ,OAAO,GAAG,UAAU;EACvC,OAAOI,KAAK,CAACQ,UAAU,EAAE;IACvBP,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,QAAQ,EAAE,kBAAkB;MAC9B,cAAc,EAAE;IAClB,CAAC;IACCC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEP,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC,CAACO,IAAI,CAACjB,aAAa,CAAC;AACxB,CAAC;AAED,MAAMoB,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAMF,UAAU,GAAGZ,OAAO,GAAG,WAAW;EACxC,OAAOI,KAAK,CAACQ,UAAU,EAAE;IACvBP,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASQ,KAAM;IACnC;EACF,CAAC,CAAC,CAACJ,IAAI,CAACjB,aAAa,CAAC;AACxB,CAAC;AAED,SAASQ,MAAM,EAAEU,MAAM,EAAEE,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}