{"ast":null,"code":"var _jsxFileName = \"/Users/sofya/dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport '../index.css';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n  const [infoTooltip, setInfoTooltip] = React.useState(false);\n  const navigate = React.useNavigate();\n  const [emailValue, setEmailValue] = React.useState(null);\n  const [popupStatus, setPopupStatus] = React.useState({\n    image: '',\n    message: ''\n  });\n  function handleLogin(email, password) {\n    signIn(email, password).then(res => {\n      localStorage.setItem('jwt', res.token);\n      setIsLoggedIn(true);\n      setEmailValue(email);\n      navigate(\"/\");\n    }).catch(() => {\n      setPopupStatus({\n        image: crossImg,\n        message: 'Что-то пошло не так! Попробуйте еще раз.'\n      });\n      handleInfoTooltip();\n    });\n  }\n  ;\n  function handleRegister(email, password) {\n    signUp(email, password).then(() => {\n      setPopupStatus({\n        image: checkmarkImg,\n        message: 'Вы успешно зарегистрировались!'\n      });\n      navigate(\"/signin\");\n    }).catch(() => {\n      setPopupStatus({\n        image: crossImg,\n        message: 'Что-то пошло не так! Попробуйте еще раз.'\n      });\n    }).finally(handleInfoTooltip);\n  }\n  ;\n  function handleLogOut() {\n    setIsLoggedIn(false);\n    localStorage.removeItem('jwt');\n    setEmailValue(null);\n    navigate(\"/signin\");\n  }\n  ;\n  function handleInfoTooltip() {\n    setInfoTooltip(true);\n  }\n  ;\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      checkToken(jwt).then(res => {\n        if (res) {\n          setIsLoggedIn(true);\n          setEmailValue(res.data.email);\n          navigate('/');\n        }\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }, []);\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()]).then(_ref => {\n        let [profileInfo, card] = _ref;\n        setCurrentUser(profileInfo);\n        setCards(card);\n      }).catch(err => {\n        console.error(err);\n      });\n    }\n  }, [isLoggedIn]);\n\n  //Данные пользователя и карточки\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo(), api.getInitialCard()]).then(_ref2 => {\n      let [res, cards] = _ref2;\n      setCurrentUser(res);\n      setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  //Состояние попапов \n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  //Для выбранной карточки (попап открытой картинки)\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  //Обработчик клика по изображению (попап)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  //Обработчик для отправки данных пользователя на сервер \n  function handleUpdateUser(user) {\n    api.setUserInfo(user.name, user.about).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  //Обработчик для обновления аватара \n  function handleUpdateAvatar(user) {\n    api.addNewAvatar(user).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n  }\n\n  //Обработчик кнопки редактирования данных польз\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  //Обработчик закрытия попапов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  //Стейт для карточек\n  const [cards, setCards] = React.useState([]);\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              title: \"\\u0412\\u044B\\u0439\\u0442\\u0438\",\n              route: \"\",\n              email: emailValue,\n              onClick: handleLogOut\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n              component: Main,\n              isLoggedIn: isLoggedIn,\n              onConfirmCardDelete: handleConfimationClick,\n              isEditAvatarPopupOpen: handleEditAvatarClick,\n              isEditProfilePopupOpen: handleEditProfileClick,\n              isAddPlacePopupOpen: handleAddPlaceClick,\n              onCardClick: handleCardClick,\n              cards: cards,\n              onCardLike: handleCardLike,\n              onCardDelete: handleCardDelete\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              title: \"\\u0412\\u043E\\u0439\\u0442\\u0438\",\n              route: \"/signin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Register, {\n              onRegister: handleRegister\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signin\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              title: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\",\n              route: \"/signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Login, {\n              onLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"*\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/signin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        popupStatus: popupStatus,\n        isOpen: infoTooltip,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onClose: closeAllPopups,\n        name: \"confirm-delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonName: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmationPopup, {\n        card: isConfirmationPopupOpen,\n        onClose: closeAllPopups,\n        name: \"confirm-deletion\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j0JEor4gUuyiQy+xvJeMtcsujtU=\", false, function () {\n  return [React.useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","api","Routes","Route","Navigate","Footer","Header","Main","PopupWithForm","ImagePopup","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","InfoTooltip","App","currentUser","setCurrentUser","useState","isLoggedIn","setIsLoggedIn","infoTooltip","setInfoTooltip","navigate","useNavigate","emailValue","setEmailValue","popupStatus","setPopupStatus","image","message","handleLogin","email","password","signIn","then","res","localStorage","setItem","token","catch","crossImg","handleInfoTooltip","handleRegister","signUp","checkmarkImg","finally","handleLogOut","removeItem","useEffect","jwt","getItem","checkToken","data","err","console","error","Promise","all","getUserInfo","getInitialCards","profileInfo","card","setCards","getInitialCard","cards","log","isEditAvatarPopupOpen","setIsAvatarPopupOpen","isEditProfilePopupOpen","setIsProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","handleCardClick","props","handleUpdateUser","user","setUserInfo","name","about","closeAllPopups","handleUpdateAvatar","addNewAvatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","newCard","state","map","c","handleCardDelete","removeCard","filter","item","handleAddPlace","addNewCard","link","handleConfimationClick","isConfirmationPopupOpen"],"sources":["/Users/sofya/dev/mesto-react/src/components/App.js"],"sourcesContent":["\nimport '../index.css';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\n\n\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = React.useState({})\n\n  const [isLoggedIn, setIsLoggedIn] = React.useState(false);\n\n  const [infoTooltip, setInfoTooltip] = React.useState(false);\n\n  const navigate = React.useNavigate();\n\n  const [emailValue, setEmailValue] = React.useState(null);\n  const [popupStatus, setPopupStatus] = React.useState({ image:'', message:'' });\n\n  function handleLogin(email, password) {\n    signIn(email, password)\n      .then((res) => {\n        localStorage.setItem('jwt', res.token);\n        setIsLoggedIn(true);\n        setEmailValue(email);\n        navigate(\"/\");\n      })\n      .catch(() => {\n        setPopupStatus({image: crossImg, message: 'Что-то пошло не так! Попробуйте еще раз.'});\n        handleInfoTooltip();\n      });\n  };\n\n  function handleRegister(email, password) {\n    signUp(email, password)\n      .then(() => {\n        setPopupStatus({image: checkmarkImg, message: 'Вы успешно зарегистрировались!'});\n        navigate(\"/signin\");\n      })\n      .catch(() => {\n        setPopupStatus({image: crossImg, message: 'Что-то пошло не так! Попробуйте еще раз.'});\n      })\n      .finally(handleInfoTooltip);\n  };\n\n  function handleLogOut() {\n    setIsLoggedIn(false);\n    localStorage.removeItem('jwt');\n    setEmailValue(null);\n    navigate(\"/signin\");\n  };\n\n  function handleInfoTooltip() {\n    setInfoTooltip(true);\n  };\n\n  React.useEffect(() => {\n    const jwt = localStorage.getItem('jwt');\n    if (jwt) {\n      checkToken(jwt)\n        .then((res) => {\n          if (res) {\n            setIsLoggedIn(true);\n            setEmailValue(res.data.email);\n            navigate('/');\n          }\n        })\n        .catch((err) => {\n          console.error(err);\n        });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (isLoggedIn) {\n      Promise.all([api.getUserInfo(), api.getInitialCards()])\n        .then(([profileInfo, card]) => {\n          setCurrentUser(profileInfo);\n          setCards(card);\n        })\n        .catch((err) => {\n          console.error(err);\n        })\n    }\n  }, [isLoggedIn])\n\n\n  //Данные пользователя и карточки\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      api.getInitialCard()\n    ])\n      .then(([res, cards]) => {\n        setCurrentUser(res)\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  //Состояние попапов \n  const [isEditAvatarPopupOpen, setIsAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n\n  //Для выбранной карточки (попап открытой картинки)\n  const [selectedCard, setSelectedCard] = React.useState(null);\n\n  //Обработчик клика по изображению (попап)\n  function handleCardClick(props) {\n    setSelectedCard(props);\n  }\n\n  //Обработчик для отправки данных пользователя на сервер \n  function handleUpdateUser(user) {\n    api\n      .setUserInfo(user.name, user.about)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch((err) => console.log(err));\n  }\n\n\n  //Обработчик для обновления аватара \n  function handleUpdateAvatar(user) {\n    api.addNewAvatar(user)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsAvatarPopupOpen(true);\n  }\n\n  //Обработчик кнопки редактирования данных польз\n  function handleEditProfileClick() {\n    setIsProfilePopupOpen(true);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  //Обработчик закрытия попапов\n  function closeAllPopups() {\n    setIsAddPlacePopupOpen(false);\n    setIsAvatarPopupOpen(false);\n    setIsProfilePopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  //Стейт для карточек\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n\n        <Routes>\n          <Route exact path='/'\n            element={\n              <>\n                <Header\n                  title='Выйти'\n                  route=''\n                  email={emailValue}\n                  onClick={handleLogOut}\n                />\n                <ProtectedRoute\n                  component={Main}\n                  isLoggedIn={isLoggedIn}\n                  onConfirmCardDelete={handleConfimationClick}\n                  isEditAvatarPopupOpen={handleEditAvatarClick}\n                  isEditProfilePopupOpen={handleEditProfileClick}\n                  isAddPlacePopupOpen={handleAddPlaceClick}\n                  onCardClick={handleCardClick}\n                  cards={cards}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                />\n              </>\n            }\n          />\n          <Route path='/signup'\n            element={\n              <>\n                <Header\n                  title='Войти'\n                  route='/signin'\n                />\n                <Register\n                  onRegister={handleRegister}\n                />\n              </>\n            }\n          />\n\n          <Route path='/signin'\n            element={\n              <>\n                <Header\n                  title='Регистрация'\n                  route='/signup'\n                />\n                <Login\n                  onLogin={handleLogin}\n                />\n              </>\n            }\n          />\n\n          <Route exact path=\"*\"\n            element={\n              isLoggedIn ? <Navigate to=\"/\" /> : <Navigate to=\"/signin\" />\n            }\n          />\n        </Routes>\n\n        <Footer />\n\n        <InfoTooltip\n          popupStatus={popupStatus}\n          isOpen={infoTooltip}\n          onClose={closeAllPopups}\n        />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n\n        <ConfirmationPopup\n          card={isConfirmationPopupOpen}\n          onClose={closeAllPopups}\n          name='confirm-deletion'\n          title='Вы уверены?'\n          onCardDelete={handleCardDelete}\n        />\n\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}