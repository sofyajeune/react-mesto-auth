{"ast":null,"code":"var _jsxFileName = \"/Users/sofya/dev/mesto-react/src/components/App.js\",\n  _s = $RefreshSig$();\nimport '../index.css';\nimport React from 'react';\nimport { api } from '../utils/Api';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //Стейт для данных пользователя\n  const [currentUser, setCurrentUser] = React.useState({});\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo()\n    // api.getInitialCard()\n    ]).then(_ref => {\n      let [profileInfo, cards] = _ref;\n      setCurrentUser(profileInfo);\n      // setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  //Стейты для поп-апов (состояние - открыт / не открыт\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n\n  //Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n  //Стейт для карточек\n  const [cards, setCards] = React.useState([]);\n\n  ////////////////////////////////////API////////////////////////////////////\n  React.useEffect(() => {\n    Promise.all([api.getUserInfo()\n    // api.getInitialCard()\n    ]).then(_ref2 => {\n      let [profileInfo, cards] = _ref2;\n      setCurrentUser(profileInfo);\n      // setCards(cards);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(profileInfo) {\n    api.setUserInf(profileInfo.name, profileInfo.about).then(profileInfo => {\n      setCurrentUser(profileInfo);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(() => {\n      setCards(cards.filter(item => item._id !== card._id));\n    }).catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.addNewAvatar(user.avatar).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => console.log(err));\n  }\n\n  ////////////////////////////////////API////////////////////////////////////\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  //Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  //Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(card) {\n    setImagePopupOpen(true);\n    setSelectedCard(card);\n  }\n\n  //Обработчик закрытия поп-апов\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  };\n\n  //Функция лайка карточки\n  function handleCardLike(card) {\n    //Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        isEditAvatarPopupOpen: handleEditAvatarClick,\n        isEditProfilePopupOpen: handleEditProfileClick,\n        isAddPlacePopupOpen: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        sOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        onClose: closeAllPopups,\n        name: \"confirm-delete\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        buttonName: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"j2aW5BELDvfLZ8LWg0p1SowUBPc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","api","Footer","Header","Main","PopupWithForm","ImagePopup","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","useState","useEffect","Promise","all","getUserInfo","then","profileInfo","cards","catch","err","console","log","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setImagePopupOpen","selectedCard","setSelectedCard","setCards","handleUpdateUser","setUserInf","name","about","closeAllPopups","handleCardDelete","card","removeCard","_id","filter","item","handleAddPlace","addNewCard","link","res","handleUpdateAvatar","user","addNewAvatar","avatar","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","newCard","newCards","map","c"],"sources":["/Users/sofya/dev/mesto-react/src/components/App.js"],"sourcesContent":["\nimport '../index.css';\nimport React from 'react';\nimport { api } from '../utils/Api';\n\nimport Footer from './Footer';\nimport Header from './Header';\nimport Main from './Main';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\n\n\nfunction App() {\n\n    //Стейт для данных пользователя\n    const [currentUser, setCurrentUser] = React.useState({})\n\n    React.useEffect(() => {\n      Promise.all([\n        api.getUserInfo(),\n        // api.getInitialCard()\n      ])\n        .then(([profileInfo, cards]) => {\n          setCurrentUser(profileInfo)\n          // setCards(cards);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }, []);\n\n  //Стейты для поп-апов (состояние - открыт / не открыт\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n\n  //Стейт для выбранной карточки, исп. в поп-апе картинки в полном размере\n  const [selectedCard, setSelectedCard] = React.useState({});\n\n\n\n  //Стейт для карточек\n  const [cards, setCards] = React.useState([]);\n\n\n  ////////////////////////////////////API////////////////////////////////////\n  React.useEffect(() => {\n    Promise.all([\n      api.getUserInfo(),\n      // api.getInitialCard()\n    ])\n      .then(([profileInfo, cards]) => {\n        setCurrentUser(profileInfo)\n        // setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n\n  //Обработчик для отправки данных пользователя на сервер (редактирование данных профиля)\n  function handleUpdateUser(profileInfo) {\n    api.setUserInf(profileInfo.name, profileInfo.about)\n      .then(profileInfo => {\n        setCurrentUser(profileInfo);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //Функция удаления карточки, по аналогии с функцией лайка\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then(() => {\n        setCards(cards.filter(item => item._id !== card._id));\n      })\n      .catch(err => console.log(err));\n  }\n\n  //Функция добавления карточки\n  function handleAddPlace(card) {\n    api.addNewCard(card.name, card.link)\n      .then(res => {\n        setCards([res, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n\n  //Обработчик для обновления аватарки пользователя (отправка на сервер через API)\n  function handleUpdateAvatar(user) {\n    api.addNewAvatar(user.avatar)\n      .then(res => {\n        setCurrentUser(res);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  ////////////////////////////////////API////////////////////////////////////\n\n\n  //Обработчик кнопки редактирования аватарки\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  //Обработчик кнопки редактирования инф-ии профиля\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  //Обработчик кнопки добавления карточки\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n\n\n\n  //Обработчик клика по изображению карточки (открытие поп-апа картинки)\n  function handleCardClick(card) {\n    setImagePopupOpen(true)\n    setSelectedCard(card);\n  }\n\n  //Обработчик закрытия поп-апов\n  const closeAllPopups = () => {\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setImagePopupOpen(false);\n  };\n\n\n  //Функция лайка карточки\n  function handleCardLike(card) {\n    //Проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n      // Обновляем стейт\n      setCards(newCards);\n    })\n      .catch(err => console.log(err));\n  }\n\n\n\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header />\n        <Main\n          isEditAvatarPopupOpen={handleEditAvatarClick}\n          isEditProfilePopupOpen={handleEditProfileClick}\n          isAddPlacePopupOpen={handleAddPlaceClick}\n          onCardClick={handleCardClick}\n          cards={cards}\n          onCardLike={handleCardLike}\n          onCardDelete={handleCardDelete} />\n        <Footer />\n        <EditProfilePopup\n          sOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n        <PopupWithForm\n          onClose={closeAllPopups}\n          name=\"confirm-delete\"\n          title=\"Вы уверены?\"\n          buttonName=\"Да\"\n        />\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlace}\n        />\n        <ImagePopup\n          card={selectedCard}\n          onClose={closeAllPopups}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}